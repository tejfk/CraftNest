/*
  In a real-world project where you compile Tailwind with Node.js,
  this file would start with the following directives to import
  Tailwind's core styles, components, and utilities:
  
  @tailwind base;
  @tailwind components;
  @tailwind utilities;

  You would then add your custom styles below them, often inside
  a @layer components { ... } block.

  For this CDN-based example, we only need our custom styles that
  Tailwind's utility classes cannot easily handle on their own.
*/

/* 
  Custom scrollbar for a more modern and consistent look across browsers
  that support it (like Chrome, Edge, Safari).
*/
::-webkit-scrollbar {
    width: 8px;  /* Width of the vertical scrollbar */
    height: 8px; /* Height of the horizontal scrollbar */
}

::-webkit-scrollbar-track {
    background-color: transparent; /* Makes the track invisible */
}

::-webkit-scrollbar-thumb {
    background-color: #d1d5db; /* A light gray for the scrollbar thumb in light mode */
    border-radius: 10px;      /* Fully rounded ends */
    border: 2px solid transparent; /* Creates a small padding effect */
    background-clip: content-box;
}

::-webkit-scrollbar-thumb:hover {
    background-color: #a7aeb9; /* A slightly darker gray on hover */
}

/* 
  Specific scrollbar styles when the dashboard is in dark mode.
  This targets the thumb when the <html> element has the 'dark' class.
*/
.dark ::-webkit-scrollbar-thumb {
    background-color: #4b5563; /* A darker gray for the scrollbar thumb in dark mode */
}

.dark ::-webkit-scrollbar-thumb:hover {
    background-color: #6d7a8c; /* A slightly lighter gray on hover for contrast in dark mode */
}

/* 
  This rule removes the default dropdown arrow/marker that browsers
  add to the <summary> element. This allows for a cleaner look,
  as we are using a custom SVG icon for the dropdown arrow instead.
*/
summary::-webkit-details-marker {
    display: none;
}